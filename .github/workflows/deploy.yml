name: Deployment
on:
  push:
    branches:
      - main
      - master
      - dev
env:
  MONGODB_DB_NAME: github-actions-demo
  # use the same name of database server for all the jobs in this file
  # so put this env at the top before the jobs
  # this is set at workflow level. It will be available in all jobs unless a job overwrites by using same name
  # Env variables can be set at job level as well, and even at the step level.
  # if login credentials differ for deployment production vs. test then that would be a good example to set it at job level
jobs:
  test:
    environment: testing
    # this is the repo level environment configured in github to differentiate users on testing vs. deployment
    # jobs without environment will use the general repo level secrets defined at first and still configured.
    # can delete the repo level secrets and this will still work.
    runs-on: ubuntu-latest
    env:
      MONGODB_CLUSTER_ADDRESS: cluster0.pj1lxuo.mongodb.net
      MONGODB_USERNAME: ${{ secrets.MONGODB_USERNAME }}
      MONGODB_PASSWORD: ${{ secrets.MONGODB_PASSWORD }}
      # use the secrets context above; similar to the env context used below
      # these will be injected via values stored at github
      # even in log files.
      PORT: 8080
      # storing passwords in cleartext is not ideal and not done.
      # these values will be available on the runner now so that when the source code is run
      # the variables have values that the runner can use to execute the code.
      # PORT is the application port that the runner will be running.
    steps:
      - name: Get Code
        uses: actions/checkout@v3
      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: ~/.npm
          key: npm-deps-${{ hashFiles('**/package-lock.json') }}
      - name: Install dependencies
        run: npm ci
      - name: Run server
        run: npm start & npx wait-on http://127.0.0.1:$PORT
        # The env variable can be used in workflow file itself. Must use $ when used in run
        # if running on windows it would be different syntax.
        # with a python shell by adding shell key to steps the syntax would be diffeent
        # here ubuntu-latest bash is $ 
      - name: Run tests
        run: npm test
      - name: Output information
        #run: echo "..."
        run: |
          echo "MONGODB_USERNAME: ${{ env.MONGODB_USERNAME }}"
          echo "${{ env.PORT }}"
# echo the mongodb  username
# can use a github context env.MONGODB_USERNAME
# note this type of syntax must be run within a pipe
# it will not run in a single line!
# PORT will display for this job but not for the deploy job below         
  deploy:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Output information
      # note that MONGO_DB_NAME will be available but MONGODB_USERNAME will not.
      # note that PORT is also not avaiable to this job
        run: |        
          echo "MONGODB_DB_NAME: $MONGODB_DB_NAME"
          echo "MONGODB_USERNAME: $MONGODB_USERNAME"
          echo "${{ env.PORT }}"
